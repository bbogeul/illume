[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nCollectionHooks = Package['matb33:collection-hooks'].CollectionHooks;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nSimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nMongoObject = Package['aldeed:simple-schema'].MongoObject;\nCollection2 = Package['aldeed:collection2-core'].Collection2;\nIron = Package['iron:core'].Iron;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"lib\":{\"config.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                    //\n// lib/config.js                                                                      //\n//                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////\n                                                                                      //\nRouter.configure({                                                                    // 1\n\tlayoutTemplate: 'appLayout'                                                          // 2\n});                                                                                   //\n                                                                                      //\nRouter.plugin('dataNotFound', { dataNotFoundTemplate: 'notFound' });                  // 5\n////////////////////////////////////////////////////////////////////////////////////////\n\n},\"route.coffee\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                    //\n// lib/route.coffee.js                                                                //\n//                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////\n                                                                                      //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nRouter.configure({                                                                    // 1\n  link: {                                                                             // 2\n    canonical: {                                                                      // 3\n      href: ' '                                                                       // 4\n    }                                                                                 //\n  },                                                                                  //\n  meta: {                                                                             // 2\n    charset: {                                                                        // 7\n      charset: 'UTF-8'                                                                // 8\n    },                                                                                //\n    keywords: {                                                                       // 7\n      name: 'keywords',                                                               // 12\n      itemprop: 'keywords',                                                           // 12\n      content: ' '                                                                    // 12\n    },                                                                                //\n    description: {                                                                    // 7\n      name: 'description',                                                            // 18\n      itemprop: 'description',                                                        // 18\n      property: 'og:description',                                                     // 18\n      content: ' '                                                                    // 18\n    },                                                                                //\n    image: {                                                                          // 7\n      name: 'twitter:image',                                                          // 24\n      itemprop: 'image',                                                              // 24\n      property: 'og:image',                                                           // 24\n      content: '/img/badge.png'                                                       // 24\n    },                                                                                //\n    'og:type': 'website',                                                             // 7\n    'og:title': function() {                                                          // 7\n      return document.title;                                                          //\n    },                                                                                //\n    'og:site_name': 'Berguer PR Firm | San Francisco',                                // 7\n    url: {                                                                            // 7\n      property: 'og:url',                                                             // 35\n      itemprop: 'url',                                                                // 35\n      content: 'http://www.illumeweb.com'                                             // 35\n    },                                                                                //\n    'http-equiv': {                                                                   // 7\n      'http-equiv': 'X-UA-Compatible',                                                // 42\n      content: 'IE=edge,chrome=1'                                                     // 42\n    },                                                                                //\n    robots: 'index, follow',                                                          // 7\n    google: 'notranslate'                                                             // 7\n  }                                                                                   //\n});                                                                                   //\n                                                                                      //\nRouter.route('home', {                                                                // 1\n  template: 'home',                                                                   // 49\n  path: '/',                                                                          // 49\n  title: 'Berguer PR Firm | San Francisco',                                           // 49\n  meta: {                                                                             // 49\n    url: {                                                                            // 53\n      property: 'og:url',                                                             // 54\n      itemprop: 'url',                                                                // 54\n      content: ' '                                                                    // 54\n    }                                                                                 //\n  }                                                                                   //\n});                                                                                   //\n                                                                                      //\nRouter.route('about', {                                                               // 1\n  template: 'about',                                                                  // 59\n  path: '/about-berguer-pr',                                                          // 59\n  title: 'About | Berguer PR Firm',                                                   // 59\n  meta: {                                                                             // 59\n    url: {                                                                            // 63\n      property: 'og:url',                                                             // 64\n      itemprop: 'url',                                                                // 64\n      content: ' '                                                                    // 64\n    }                                                                                 //\n  }                                                                                   //\n});                                                                                   //\n                                                                                      //\nRouter.route('service', {                                                             // 1\n  template: 'service',                                                                // 69\n  path: '/services-berguer-pr',                                                       // 69\n  title: 'Services | Berguer PR Firm',                                                // 69\n  meta: {                                                                             // 69\n    url: {                                                                            // 73\n      property: 'og:url',                                                             // 74\n      itemprop: 'url',                                                                // 74\n      content: ' '                                                                    // 74\n    }                                                                                 //\n  }                                                                                   //\n});                                                                                   //\n                                                                                      //\nRouter.route('applications', {                                                        // 1\n  template: 'applications',                                                           // 78\n  path: '/work-with-berguer-pr',                                                      // 78\n  title: 'Work with Us | Berguer PR Firm',                                            // 78\n  meta: {                                                                             // 78\n    url: {                                                                            // 82\n      property: 'og:url',                                                             // 83\n      itemprop: 'url',                                                                // 83\n      content: ' '                                                                    // 83\n    }                                                                                 //\n  }                                                                                   //\n});                                                                                   //\n                                                                                      //\nRouter.route('application', {                                                         // 1\n  template: 'application',                                                            // 87\n  path: '/d2wqdonsakNfiemkmfewnfdsfijel3123lsxosd',                                   // 87\n  controller: 'ApplicationController',                                                // 87\n  title: '',                                                                          // 87\n  meta: {                                                                             // 87\n    url: {                                                                            // 94\n      property: 'og:url',                                                             // 95\n      itemprop: 'url',                                                                // 95\n      content: ' '                                                                    // 95\n    }                                                                                 //\n  }                                                                                   //\n});                                                                                   //\n                                                                                      //\nRouter.route('rsvp', {                                                                // 1\n  template: 'rsvp',                                                                   // 99\n  controller: 'RsvpController',                                                       // 99\n  action: 'action',                                                                   // 99\n  where: 'client'                                                                     // 99\n});                                                                                   //\n                                                                                      //\n////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"collections\":{\"schemas.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                    //\n// collections/schemas.js                                                             //\n//                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////\n                                                                                      //\n                                                                                      //\n                                                                                      //\nRsvps = new Mongo.Collection(\"rsvps\");                                                // 3\n                                                                                      //\nRsvps.attachSchema(new SimpleSchema({                                                 // 5\n  name: {                                                                             // 6\n    type: String,                                                                     // 7\n    label: \"First Name *\",                                                            // 8\n                                                                                      //\n    min: 5,                                                                           // 10\n    max: 80                                                                           // 11\n  },                                                                                  //\n  last: {                                                                             // 13\n    type: String,                                                                     // 14\n    label: \"Last Name *\",                                                             // 15\n                                                                                      //\n    min: 5,                                                                           // 17\n    max: 80                                                                           // 18\n  },                                                                                  //\n  email: {                                                                            // 20\n    type: String,                                                                     // 21\n    regEx: SimpleSchema.RegEx.Email,                                                  // 22\n    label: \"Email *\"                                                                  // 23\n                                                                                      //\n  },                                                                                  //\n  phone: {                                                                            // 26\n    type: Number,                                                                     // 27\n    optional: false,                                                                  // 28\n    label: \"Phone Number *\"                                                           // 29\n                                                                                      //\n  },                                                                                  //\n  title: {                                                                            // 32\n    type: String,                                                                     // 33\n    optional: false,                                                                  // 34\n    label: \"Job Title *\"                                                              // 35\n                                                                                      //\n  },                                                                                  //\n                                                                                      //\n  organization: {                                                                     // 39\n    type: String,                                                                     // 40\n    label: \"Company Name\",                                                            // 41\n    optional: true                                                                    // 42\n  },                                                                                  //\n  website: {                                                                          // 44\n    type: String,                                                                     // 45\n    optional: true,                                                                   // 46\n    autoform: {                                                                       // 47\n      afFieldInput: {                                                                 // 48\n        type: \"text\"                                                                  // 49\n      }                                                                               //\n    }                                                                                 //\n  },                                                                                  //\n  location: {                                                                         // 53\n    type: String,                                                                     // 54\n    optional: true,                                                                   // 55\n    autoform: {                                                                       // 56\n      afFieldInput: {                                                                 // 57\n        type: \"text\"                                                                  // 58\n      }                                                                               //\n    }                                                                                 //\n  },                                                                                  //\n  adSense: {                                                                          // 62\n    type: String,                                                                     // 63\n    optional: false,                                                                  // 64\n                                                                                      //\n    autoform: {                                                                       // 66\n                                                                                      //\n      options: [{                                                                     // 68\n        label: \"Prior Client\",                                                        // 70\n        value: \"Prior Client\"                                                         // 71\n      }, {                                                                            //\n        label: \"Referral\",                                                            // 74\n        value: \"Referral\"                                                             // 75\n      }, {                                                                            //\n        label: \"Social Media\",                                                        // 78\n        value: \"Social Media\"                                                         // 79\n      }, {                                                                            //\n        label: \"Our Website\",                                                         // 82\n        value: \"Our Website\"                                                          // 83\n      }, {                                                                            //\n        label: \"News Article\",                                                        // 86\n        value: \"News Article\"                                                         // 87\n      }, {                                                                            //\n        label: \"Other\",                                                               // 90\n        value: \"Other\"                                                                // 91\n      }]                                                                              //\n    }                                                                                 //\n  },                                                                                  //\n  timezone: {                                                                         // 96\n    type: String,                                                                     // 97\n                                                                                      //\n    optional: true,                                                                   // 99\n                                                                                      //\n    autoform: {                                                                       // 101\n                                                                                      //\n      options: [{                                                                     // 103\n        label: \"(GMT-08:00) Pacific Time (US & Canada)\",                              // 105\n        value: \"Pacific Time (US & Canada)\"                                           // 106\n      }, {                                                                            //\n        label: \"(GMT-11:00) International Date Line West\",                            // 109\n        value: \"International Date Line West\"                                         // 110\n      }, {                                                                            //\n        label: \"(GMT-10:00) Midway Island, Samoa\",                                    // 113\n        value: \"Midway Island, Samoa\"                                                 // 114\n      }, {                                                                            //\n        label: \"(GMT-10:00) Hawaii\",                                                  // 117\n        value: \"Hawaii\"                                                               // 118\n      }, {                                                                            //\n        label: \"(GMT-09:00) Alaska\",                                                  // 121\n        value: \"(GMT-09:00) Alaska\"                                                   // 122\n      }, {                                                                            //\n        label: \"(GMT-07:00) Arizona\",                                                 // 125\n        value: \"(GMT-07:00) Arizona\"                                                  // 126\n      }, {                                                                            //\n        label: \"(GMT-07:00) Mountain Time (US & Canada)\",                             // 129\n        value: \"(GMT-07:00) Mountain Time (US & Canada)\"                              // 130\n      }, {                                                                            //\n        label: \"(GMT-06:00) Central America\",                                         // 133\n        value: \"(GMT-06:00) Central America\"                                          // 134\n      }, {                                                                            //\n        label: \"(GMT-06:00) Central Time (US & Canada)\",                              // 137\n        value: \"(GMT-06:00) Central Time (US & Canada)\"                               // 138\n      }, {                                                                            //\n        label: \"(GMT-06:00) Guadalajara, Mexico City, Monterrey\",                     // 141\n        value: \"(GMT-06:00) Guadalajara, Mexico City, Monterrey\"                      // 142\n      }, {                                                                            //\n        label: \"(GMT-05:00) Bogota, Lima, Quito, Rio Branco\",                         // 145\n        value: \"(GMT-05:00) Bogota, Lima, Quito, Rio Branco\"                          // 146\n      }, {                                                                            //\n        label: \"(GMT-05:00) Eastern Time (US & Canada)\",                              // 149\n        value: \"(GMT-05:00) Eastern Time (US & Canada)\"                               // 150\n      }, {                                                                            //\n        label: \"(GMT-05:00) Indiana (East)\",                                          // 153\n        value: \"(GMT-05:00) Indiana (East)\"                                           // 154\n      }, {                                                                            //\n        label: \"(GMT-04:00) Atlantic Time (Canada)\",                                  // 157\n        value: \"(GMT-04:00) Atlantic Time (Canada)\"                                   // 158\n      }, {                                                                            //\n        label: \"(GMT-04:00) Caracas, La Paz\",                                         // 161\n        value: \"Caracas, La Paz\"                                                      // 162\n      }, {                                                                            //\n        label: \"(GMT-04:00) Manaus\",                                                  // 165\n        value: \"(GMT-04:00) Manaus\"                                                   // 166\n      }, {                                                                            //\n        label: \"(GMT-04:00) Santiago\",                                                // 169\n        value: \"(GMT-04:00) Santiago\"                                                 // 170\n      }, {                                                                            //\n        label: \"(GMT-03:30) Newfoundland\",                                            // 173\n        value: \"(GMT-03:30) Newfoundland\"                                             // 174\n      }, {                                                                            //\n        label: \"(GMT-03:00) Brasilia\",                                                // 177\n        value: \"(GMT-03:00) Brasilia\"                                                 // 178\n      }, {                                                                            //\n        label: \"(GMT-03:00) Buenos Aires, Georgetown\",                                // 181\n        value: \"(GMT-03:00) Buenos Aires, Georgetown\"                                 // 182\n      }, {                                                                            //\n        label: \"(GMT-03:00) Greenland\",                                               // 185\n        value: \"(GMT-03:00) Greenland\"                                                // 186\n      }, {                                                                            //\n        label: \"(GMT-03:00) Montevideo\",                                              // 189\n        value: \"(GMT-03:00) Montevideo\"                                               // 190\n      }, {                                                                            //\n        label: \"(GMT-02:00) Mid-Atlantic\",                                            // 193\n        value: \"(GMT-02:00) Mid-Atlantic\"                                             // 194\n      }, {                                                                            //\n        label: \"(GMT-01:00) Cape Verde Is\",                                           // 197\n        value: \"(GMT-01:00) Cape Verde Is\"                                            // 198\n      }, {                                                                            //\n        label: \"(GMT-01:00) Azores\",                                                  // 201\n        value: \"(GMT-01:00) Azores\"                                                   // 202\n      }, {                                                                            //\n        label: \"(GMT+00:00) Casablanca, Monrovia, Reykjavik\",                         // 205\n        value: \"(GMT+00:00) Casablanca, Monrovia, Reykjavik\"                          // 206\n      }, {                                                                            //\n        label: \"(GMT+00:00) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London\",\n        value: \"(GMT+00:00) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London\"  // 210\n      }, {                                                                            //\n        label: \"(GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",        // 213\n        value: \"(GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\"         // 214\n      }, {                                                                            //\n        label: \"(GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",       // 217\n        value: \"(GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\"        // 218\n      }, {                                                                            //\n        label: \"(GMT+01:00) Brussels, Copenhagen, Madrid, Paris\",                     // 221\n        value: \"(GMT+01:00) Brussels, Copenhagen, Madrid, Paris\"                      // 222\n      }, {                                                                            //\n        label: \"(GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",                        // 225\n        value: \"(GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb\"                         // 226\n      }, {                                                                            //\n        label: \"(GMT+01:00) West Central Africa\",                                     // 229\n        value: \"(GMT+01:00) West Central Africa\"                                      // 230\n      }, {                                                                            //\n        label: \"(GMT+02:00) Amman\",                                                   // 233\n        value: \"(GMT+02:00) Amman\"                                                    // 234\n      }, {                                                                            //\n        label: \"(GMT+02:00) Athens, Bucharest, Istanbul\",                             // 237\n        value: \"(GMT+02:00) Athens, Bucharest, Istanbul\"                              // 238\n      }, {                                                                            //\n        label: \"(GMT+02:00) Beirut\",                                                  // 242\n        value: \"(GMT+02:00) Beirut\"                                                   // 243\n      }, {                                                                            //\n        label: \"(GMT+02:00) Cairo\",                                                   // 246\n        value: \"(GMT+02:00) Cairo\"                                                    // 247\n      }, {                                                                            //\n        label: \"(GMT+02:00) Harare, Pretoria\",                                        // 250\n        value: \"(GMT+02:00) Harare, Pretoria\"                                         // 251\n      }, {                                                                            //\n        label: \"(GMT+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",           // 254\n        value: \"(GMT+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\"            // 255\n      }, {                                                                            //\n        label: \"(GMT+02:00) Jerusalem\",                                               // 258\n        value: \"(GMT+02:00) Jerusalem\"                                                // 259\n      }, {                                                                            //\n        label: \"(GMT+02:00) Minsk\",                                                   // 262\n        value: \"(GMT+02:00) Minsk\"                                                    // 263\n      }, {                                                                            //\n        label: \"(GMT+02:00) Windhoek\",                                                // 266\n        value: \"(GMT+02:00) Windhoek\"                                                 // 267\n      }, {                                                                            //\n        label: \"(GMT+03:00) Kuwait, Riyadh, Baghdad\",                                 // 270\n        value: \"(GMT+03:00) Kuwait, Riyadh, Baghdad\"                                  // 271\n      }, {                                                                            //\n        label: \"(GMT+03:00) Moscow, St. Petersburg, Volgograd\",                       // 274\n        value: \"(GMT+03:00) Moscow, St. Petersburg, Volgograd\"                        // 275\n      }, {                                                                            //\n        label: \"(GMT+03:00) Nairobi\",                                                 // 278\n        value: \"(GMT+03:00) Nairobi\"                                                  // 279\n      }, {                                                                            //\n        label: \"(GMT+03:00) Tbilisi\",                                                 // 282\n        value: \"(GMT+03:00) Tbilisi\"                                                  // 283\n      }, {                                                                            //\n        label: \"(GMT+03:30) Tehran\",                                                  // 286\n        value: \"(GMT+03:30) Tehran\"                                                   // 287\n      }, {                                                                            //\n        label: \"(GMT+04:00) Abu Dhabi, Muscat\",                                       // 290\n        value: \"(GMT+04:00) Abu Dhabi, Muscat\"                                        // 291\n      }, {                                                                            //\n        label: \"(GMT+04:00) Baku\",                                                    // 294\n        value: \"(GMT+04:00) Baku\"                                                     // 295\n      }, {                                                                            //\n        label: \"(GMT+04:00) Yerevan\",                                                 // 298\n        value: \"(GMT+04:00) Yerevan\"                                                  // 299\n      }, {                                                                            //\n        label: \"(GMT+04:30) Kabul\",                                                   // 302\n        value: \"(GMT+04:30) Kabul\"                                                    // 303\n      }, {                                                                            //\n        label: \"(GMT+05:00) Yekaterinburg\",                                           // 306\n        value: \"(GMT+05:00) Yekaterinburg\"                                            // 307\n      }, {                                                                            //\n        label: \"(GMT+05:00) Islamabad, Karachi, Tashkent\",                            // 310\n        value: \"(GMT+05:00) Islamabad, Karachi, Tashkent\"                             // 311\n      }, {                                                                            //\n        label: \"(GMT+05:30) Sri Jayawardenapura\",                                     // 314\n        value: \"(GMT+05:30) Sri Jayawardenapura\"                                      // 315\n      }, {                                                                            //\n        label: \"(GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi\",                     // 318\n        value: \"(GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi\"                      // 319\n      }, {                                                                            //\n        label: \"(GMT+05:45) Kathmandu\",                                               // 322\n        value: \"(GMT+05:45) Kathmandu\"                                                // 323\n      }, {                                                                            //\n        label: \"(GMT+06:00) Almaty, Novosibirsk\",                                     // 326\n        value: \"(GMT+06:00) Almaty, Novosibirsk\"                                      // 327\n      }, {                                                                            //\n        label: \"(GMT+06:00) Astana, Dhaka\",                                           // 330\n        value: \"(GMT+06:00) Astana, Dhaka\"                                            // 331\n      }, {                                                                            //\n        label: \"(GMT+06:30) Yangon (Rangoon)\",                                        // 334\n        value: \"(GMT+06:30) Yangon (Rangoon)\"                                         // 335\n      }, {                                                                            //\n        label: \"(GMT+07:00) Bangkok, Hanoi, Jakarta\",                                 // 338\n        value: \"(GMT+07:00) Bangkok, Hanoi, Jakarta\"                                  // 339\n      }, {                                                                            //\n        label: \"(GMT+07:00) Krasnoyarsk\",                                             // 342\n        value: \"(GMT+07:00) Krasnoyarsk\"                                              // 343\n      }, {                                                                            //\n        label: \"(GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",                   // 346\n        value: \"(GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi\"                    // 347\n      }, {                                                                            //\n        label: \"(GMT+08:00) Kuala Lumpur, Singapore\",                                 // 350\n        value: \"(GMT+08:00) Kuala Lumpur, Singapore\"                                  // 351\n      }, {                                                                            //\n        label: \"(GMT+08:00) Irkutsk, Ulaan Bataar\",                                   // 354\n        value: \"(GMT+08:00) Irkutsk, Ulaan Bataar\"                                    // 355\n      }, {                                                                            //\n        label: \"(GMT+08:00) Perth\",                                                   // 358\n        value: \"(GMT+08:00) Perth\"                                                    // 359\n      }, {                                                                            //\n        label: \"(GMT+08:00) Taipei\",                                                  // 362\n        value: \"(GMT+08:00) Taipei\"                                                   // 363\n      }, {                                                                            //\n        label: \"(GMT+09:00) Osaka, Sapporo, Tokyo\",                                   // 366\n        value: \"(GMT+09:00) Osaka, Sapporo, Tokyo\"                                    // 367\n      }, {                                                                            //\n        label: \"(GMT+09:00) Seoul\",                                                   // 370\n        value: \"(GMT+09:00) Seoul\"                                                    // 371\n      }, {                                                                            //\n        label: \"(GMT+09:00) Yakutsk\",                                                 // 374\n        value: \"(GMT+09:00) Yakutsk\"                                                  // 375\n      }, {                                                                            //\n        label: \"(GMT+09:30) Adelaide\",                                                // 378\n        value: \"(GMT+09:30) Adelaide\"                                                 // 379\n      }, {                                                                            //\n        label: \"(GMT+09:30) Darwin\",                                                  // 382\n        value: \"(GMT+09:30) Darwin\"                                                   // 383\n      }, {                                                                            //\n        label: \"(GMT+10:00) Canberra, Melbourne, Sydney\",                             // 387\n        value: \"(GMT+10:00) Canberra, Melbourne, Sydney\"                              // 388\n      }, {                                                                            //\n        label: \"(GMT+10:00) Hobart\",                                                  // 391\n        value: \"(GMT+10:00) Hobart\"                                                   // 392\n      }, {                                                                            //\n        label: \"(GMT+10:00) Guam, Port Moresby\",                                      // 395\n        value: \"(GMT+10:00) Guam, Port Moresby\"                                       // 396\n      }, {                                                                            //\n        label: \"(GMT+10:00) Vladivostok\",                                             // 399\n        value: \"(GMT+10:00) Vladivostok\"                                              // 400\n      }, {                                                                            //\n        label: \"(GMT+11:00) Magadan, Solomon Is., New Caledonia\",                     // 403\n        value: \"(GMT+11:00) Magadan, Solomon Is., New Caledonia\"                      // 404\n      }, {                                                                            //\n        label: \"(GMT+12:00) Auckland, Wellington\",                                    // 407\n        value: \"(GMT+12:00) Auckland, Wellington\"                                     // 408\n      }, {                                                                            //\n        label: \"(GMT+12:00) Fiji, Kamchatka, Marshall Is.\",                           // 411\n        value: \"(GMT+12:00) Fiji, Kamchatka, Marshall Is.\"                            // 412\n      }, {                                                                            //\n        label: \"(GMT+13:00) Nuku'alofa\",                                              // 415\n        value: \"(GMT+13:00) Nuku'alofa\"                                               // 416\n      }]                                                                              //\n    }                                                                                 //\n  },                                                                                  //\n                                                                                      //\n  dateFieldName: {                                                                    // 425\n    type: Date,                                                                       // 426\n    optional: true,                                                                   // 427\n    autoform: {                                                                       // 428\n      type: \"pickadate\"                                                               // 429\n    }                                                                                 //\n  },                                                                                  //\n                                                                                      //\n  createdAt: {                                                                        // 433\n    type: Date,                                                                       // 434\n    autoValue: function () {                                                          // 435\n      function autoValue() {                                                          // 435\n        return new Date();                                                            // 436\n      }                                                                               //\n                                                                                      //\n      return autoValue;                                                               //\n    }()                                                                               //\n  }                                                                                   //\n}));                                                                                  //\n                                                                                      //\nRsvps.allow({                                                                         // 441\n  insert: function () {                                                               // 442\n    function insert(userId, doc) {                                                    // 442\n      return true;                                                                    // 443\n    }                                                                                 //\n                                                                                      //\n    return insert;                                                                    //\n  }(),                                                                                //\n  update: function () {                                                               // 445\n    function update(userId, doc, fields, modifier) {                                  // 445\n      return true;                                                                    // 446\n    }                                                                                 //\n                                                                                      //\n    return update;                                                                    //\n  }(),                                                                                //\n  remove: function () {                                                               // 448\n    function remove(userId, doc) {                                                    // 448\n      return true;                                                                    // 449\n    }                                                                                 //\n                                                                                      //\n    return remove;                                                                    //\n  }()                                                                                 //\n});                                                                                   //\n////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"controller\":{\"mainController.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                    //\n// controller/mainController.js                                                       //\n//                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////\n                                                                                      //\n                                                                                      //\n////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"application.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                    //\n// server/application.js                                                              //\n//                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////\n                                                                                      //\n/*****************************************************************************/       //\n/* Server Only Methods */                                                             //\n/*****************************************************************************/       //\nMeteor.methods({                                                                      // 4\n  'submitRsvp': function () {                                                         // 5\n    function submitRsvp(rsvp) {                                                       // 5\n      console.log('new RSVP:', rsvp);                                                 // 6\n      Rsvps.insert(rsvp);                                                             // 7\n    }                                                                                 //\n                                                                                      //\n    return submitRsvp;                                                                //\n  }()                                                                                 //\n});                                                                                   //\n/**                                                                                   //\n * Meteor.publish('items', function (param1, param2) {                                //\n *  this.ready();                                                                     //\n * });                                                                                //\n */                                                                                   //\nMeteor.publish('rsvps', function () {                                                 // 15\n  return Rsvps.find();                                                                // 16\n});                                                                                   //\n////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\"extensions\":[\".js\",\".json\",\".coffee\"]});\nrequire(\"./lib/config.js\");\nrequire(\"./lib/route.coffee\");\nrequire(\"./collections/schemas.js\");\nrequire(\"./controller/mainController.js\");\nrequire(\"./server/application.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/lib/config.js","/lib/route.coffee","/collections/schemas.js","/server/application.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["Router.configure({\r\n\tlayoutTemplate: 'appLayout'\r\n});\r\n\r\nRouter.plugin('dataNotFound', {dataNotFoundTemplate: 'notFound'});\r\n","Router.configure\r\n  link:\r\n    canonical:\r\n        href: ' '\r\n  meta:\r\n    # <meta charset=\"UTF-8\">\r\n    charset:\r\n      charset: 'UTF-8'\r\n\r\n    # <meta name=\"keywords\" content=\"Awes..\">\r\n    keywords: \r\n      name: 'keywords'\r\n      itemprop: 'keywords'\r\n      content: ' ' \r\n\r\n    # <meta name=\"description\" itemprop=\"description\" property=\"og:description\" content=\"Default desc..\">\r\n    description:\r\n      name: 'description'\r\n      itemprop: 'description'\r\n      property: 'og:description'\r\n      content:  ' '\r\n\r\n    image:\r\n      name: 'twitter:image'\r\n      itemprop: 'image'\r\n      property: 'og:image'\r\n      content: '/img/badge.png'\r\n\r\n    'og:type': 'website'\r\n    'og:title': ->\r\n      document.title\r\n    'og:site_name': 'Berguer PR Firm | San Francisco'\r\n\r\n    url:\r\n      property: 'og:url'\r\n      itemprop: 'url'\r\n      content: 'http://www.illumeweb.com'\r\n\r\n     \r\n\r\n    'http-equiv':\r\n      'http-equiv': 'X-UA-Compatible'\r\n      content: 'IE=edge,chrome=1'\r\n\r\n    robots: 'index, follow'\r\n    google: 'notranslate'\r\n\r\nRouter.route 'home',\r\n  template: 'home'\r\n  path: '/'\r\n  title: 'Berguer PR Firm | San Francisco'\r\n  meta:\r\n    url:\r\n      property: 'og:url'\r\n      itemprop: 'url'\r\n      content: ' '\r\n\r\nRouter.route 'about',\r\n  template: 'about'\r\n  path: '/about-berguer-pr'\r\n  title: 'About | Berguer PR Firm'\r\n  meta:\r\n    url:\r\n      property: 'og:url'\r\n      itemprop: 'url'\r\n      content: ' '    \r\n\r\nRouter.route 'service',\r\n  template: 'service'\r\n  path: '/services-berguer-pr'\r\n  title: 'Services | Berguer PR Firm'\r\n  meta:\r\n    url:\r\n      property: 'og:url'\r\n      itemprop: 'url'\r\n      content: ' ' \r\nRouter.route 'applications',\r\n  template: 'applications'\r\n  path: '/work-with-berguer-pr'\r\n  title: 'Work with Us | Berguer PR Firm'\r\n  meta:\r\n    url:\r\n      property: 'og:url'\r\n      itemprop: 'url'\r\n      content: ' '         \r\nRouter.route 'application',\r\n  template: 'application'\r\n  path: '/d2wqdonsakNfiemkmfewnfdsfijel3123lsxosd'\r\n  \r\n \r\n  controller:'ApplicationController'\r\n  title: ''\r\n  meta:\r\n    url:\r\n      property: 'og:url'\r\n      itemprop: 'url'\r\n      content: ' '\r\nRouter.route 'rsvp',\r\n  template: 'rsvp'\r\n  controller: 'RsvpController',\r\n  action: 'action',\r\n  where: 'client'"," \n\nRsvps = new Mongo.Collection(\"rsvps\");\n\nRsvps.attachSchema(new SimpleSchema({\n  name: {\n    type: String,\n    label: \"First Name *\",\n     \n    min: 5,\n    max: 80    \n  },\n  last: {\n    type: String,\n    label: \"Last Name *\",\n    \n    min: 5,\n    max: 80    \n  },\n  email: {\n      type: String,\n      regEx: SimpleSchema.RegEx.Email,\n      label: \"Email *\"\n       \n  },\n  phone: {\n      type: Number,\n      optional: false,\n      label: \"Phone Number *\"\n       \n  },\n  title: {\n      type: String,\n      optional: false,\n      label: \"Job Title *\"\n       \n  },\n \n    organization: {\n      type: String,\n      label: \"Company Name\",\n      optional: true\n  },\n      website: {\n    type: String,\n    optional: true,\n    autoform: {\n      afFieldInput: {\n        type: \"text\"\n      }\n    }\n  },\n  location: {\n    type: String,\n    optional: true,\n    autoform: {\n      afFieldInput: {\n        type: \"text\"\n      }\n    }\n  },\n    adSense: {\n      type: String,\n      optional: false,\n     \n      autoform: {\n\n        options: [\n            {\n               label: \"Prior Client\",\n               value: \"Prior Client\"\n            },\n            {\n               label: \"Referral\",\n               value: \"Referral\"\n            },\n            {\n               label: \"Social Media\",\n               value: \"Social Media\"\n            },\n            {\n               label: \"Our Website\",\n               value: \"Our Website\"\n            },\n            {\n               label: \"News Article\",\n               value: \"News Article\"\n            },\n            {\n               label: \"Other\",\n               value: \"Other\"\n            },\n         ]\n      }\n   },\n  timezone: {\n      type: String,\n      \n      optional: true,\n     \n      autoform: {\n\n        options: [\n            {\n               label: \"(GMT-08:00) Pacific Time (US & Canada)\",\n               value: \"Pacific Time (US & Canada)\"\n            },\n            {\n               label: \"(GMT-11:00) International Date Line West\",\n               value: \"International Date Line West\"\n            },\n            {\n               label: \"(GMT-10:00) Midway Island, Samoa\",\n               value: \"Midway Island, Samoa\"\n            },\n             {\n               label: \"(GMT-10:00) Hawaii\",\n               value: \"Hawaii\"\n            },\n            {\n               label: \"(GMT-09:00) Alaska\",\n               value: \"(GMT-09:00) Alaska\"\n            },\n            {\n               label: \"(GMT-07:00) Arizona\",\n               value: \"(GMT-07:00) Arizona\"\n            },\n            {\n               label: \"(GMT-07:00) Mountain Time (US & Canada)\",\n               value: \"(GMT-07:00) Mountain Time (US & Canada)\"\n            },\n            {\n               label: \"(GMT-06:00) Central America\",\n               value: \"(GMT-06:00) Central America\"\n            },\n            {\n               label: \"(GMT-06:00) Central Time (US & Canada)\",\n               value: \"(GMT-06:00) Central Time (US & Canada)\"\n            },\n            {\n               label: \"(GMT-06:00) Guadalajara, Mexico City, Monterrey\",\n               value: \"(GMT-06:00) Guadalajara, Mexico City, Monterrey\"\n            },\n            {\n               label: \"(GMT-05:00) Bogota, Lima, Quito, Rio Branco\",\n               value: \"(GMT-05:00) Bogota, Lima, Quito, Rio Branco\"\n            },\n            {\n               label: \"(GMT-05:00) Eastern Time (US & Canada)\",\n               value: \"(GMT-05:00) Eastern Time (US & Canada)\" \n            },\n            {\n               label: \"(GMT-05:00) Indiana (East)\",\n               value: \"(GMT-05:00) Indiana (East)\"\n            },\n             {\n               label: \"(GMT-04:00) Atlantic Time (Canada)\",\n               value: \"(GMT-04:00) Atlantic Time (Canada)\"\n            },\n             {\n               label: \"(GMT-04:00) Caracas, La Paz\",\n               value: \"Caracas, La Paz\"\n            },\n             {\n               label: \"(GMT-04:00) Manaus\",\n               value: \"(GMT-04:00) Manaus\"\n            },\n             {\n               label: \"(GMT-04:00) Santiago\",\n               value: \"(GMT-04:00) Santiago\"\n            },\n             {\n               label: \"(GMT-03:30) Newfoundland\",\n               value: \"(GMT-03:30) Newfoundland\"\n            },\n             {\n               label: \"(GMT-03:00) Brasilia\",\n               value: \"(GMT-03:00) Brasilia\"\n            },\n             {\n               label: \"(GMT-03:00) Buenos Aires, Georgetown\",\n               value: \"(GMT-03:00) Buenos Aires, Georgetown\"\n            },\n             {\n               label: \"(GMT-03:00) Greenland\",\n               value: \"(GMT-03:00) Greenland\"\n            },\n             {\n               label: \"(GMT-03:00) Montevideo\",\n               value: \"(GMT-03:00) Montevideo\"\n            },\n            {\n               label: \"(GMT-02:00) Mid-Atlantic\",\n               value: \"(GMT-02:00) Mid-Atlantic\"\n            },\n             {\n               label: \"(GMT-01:00) Cape Verde Is\",\n               value: \"(GMT-01:00) Cape Verde Is\"\n            },\n              {\n               label: \"(GMT-01:00) Azores\",\n               value: \"(GMT-01:00) Azores\"\n            },\n            {\n               label: \"(GMT+00:00) Casablanca, Monrovia, Reykjavik\",\n               value: \"(GMT+00:00) Casablanca, Monrovia, Reykjavik\"\n            },\n            {\n               label: \"(GMT+00:00) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London\",\n               value: \"(GMT+00:00) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London\"\n            },\n                    {\n               label: \"(GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n               value: \"(GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\"          \n                 },\n                 {\n               label: \"(GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n               value: \"(GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\"          \n                 },\n                   {\n               label: \"(GMT+01:00) Brussels, Copenhagen, Madrid, Paris\",\n               value: \"(GMT+01:00) Brussels, Copenhagen, Madrid, Paris\"          \n                 },\n                  {\n               label: \"(GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n               value: \"(GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb\"          \n                 },\n                    {\n               label: \"(GMT+01:00) West Central Africa\",\n               value: \"(GMT+01:00) West Central Africa\"          \n                 },\n                  {\n               label: \"(GMT+02:00) Amman\",\n               value: \"(GMT+02:00) Amman\"          \n                 },\n                     {\n               label: \"(GMT+02:00) Athens, Bucharest, Istanbul\",\n               value: \"(GMT+02:00) Athens, Bucharest, Istanbul\"          \n                 },\n               \n                 {\n               label: \"(GMT+02:00) Beirut\",\n               value: \"(GMT+02:00) Beirut\"          \n                 },\n                 {\n               label: \"(GMT+02:00) Cairo\",\n               value: \"(GMT+02:00) Cairo\"          \n                 },\n                  {\n               label: \"(GMT+02:00) Harare, Pretoria\",\n               value: \"(GMT+02:00) Harare, Pretoria\"          \n                 },\n                  {\n               label: \"(GMT+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n               value: \"(GMT+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\"          \n                 },\n                  {\n               label: \"(GMT+02:00) Jerusalem\",\n               value: \"(GMT+02:00) Jerusalem\"          \n                 },\n                  {\n               label: \"(GMT+02:00) Minsk\",\n               value: \"(GMT+02:00) Minsk\"          \n                 },\n                 {\n               label: \"(GMT+02:00) Windhoek\",\n               value: \"(GMT+02:00) Windhoek\"          \n                 },\n                 {\n               label: \"(GMT+03:00) Kuwait, Riyadh, Baghdad\",\n               value: \"(GMT+03:00) Kuwait, Riyadh, Baghdad\"          \n                 },\n                 {\n               label: \"(GMT+03:00) Moscow, St. Petersburg, Volgograd\",\n               value: \"(GMT+03:00) Moscow, St. Petersburg, Volgograd\"          \n                 },\n                 {\n               label: \"(GMT+03:00) Nairobi\",\n               value: \"(GMT+03:00) Nairobi\"          \n                 },\n                 {\n               label: \"(GMT+03:00) Tbilisi\",\n               value: \"(GMT+03:00) Tbilisi\"          \n                 },\n                 {\n               label: \"(GMT+03:30) Tehran\",\n               value: \"(GMT+03:30) Tehran\"          \n                 },\n                 {\n               label: \"(GMT+04:00) Abu Dhabi, Muscat\",\n               value: \"(GMT+04:00) Abu Dhabi, Muscat\"          \n                 },\n                 {\n               label: \"(GMT+04:00) Baku\",\n               value: \"(GMT+04:00) Baku\"          \n                 },\n                 {\n               label: \"(GMT+04:00) Yerevan\",\n               value: \"(GMT+04:00) Yerevan\"          \n                 },\n                 {\n               label: \"(GMT+04:30) Kabul\",\n               value: \"(GMT+04:30) Kabul\"          \n                 },\n                 {\n               label: \"(GMT+05:00) Yekaterinburg\",\n               value: \"(GMT+05:00) Yekaterinburg\"          \n                 },\n                  {\n               label: \"(GMT+05:00) Islamabad, Karachi, Tashkent\",\n               value: \"(GMT+05:00) Islamabad, Karachi, Tashkent\"          \n                 },\n                 {\n               label: \"(GMT+05:30) Sri Jayawardenapura\",\n               value: \"(GMT+05:30) Sri Jayawardenapura\"          \n                 },\n                  {\n               label: \"(GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n               value: \"(GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi\"          \n                 },\n                 {\n               label: \"(GMT+05:45) Kathmandu\",\n               value: \"(GMT+05:45) Kathmandu\"          \n                 },\n                 {\n               label: \"(GMT+06:00) Almaty, Novosibirsk\",\n               value: \"(GMT+06:00) Almaty, Novosibirsk\"          \n                 },\n                  {\n               label: \"(GMT+06:00) Astana, Dhaka\",\n               value: \"(GMT+06:00) Astana, Dhaka\"          \n                 },\n                 {\n               label: \"(GMT+06:30) Yangon (Rangoon)\",\n               value: \"(GMT+06:30) Yangon (Rangoon)\"          \n                 },\n                  {\n               label: \"(GMT+07:00) Bangkok, Hanoi, Jakarta\",\n               value: \"(GMT+07:00) Bangkok, Hanoi, Jakarta\"          \n                 },\n                 {\n               label: \"(GMT+07:00) Krasnoyarsk\",\n               value: \"(GMT+07:00) Krasnoyarsk\"          \n                 },\n                 {\n               label: \"(GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n               value: \"(GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi\"          \n                 },\n                 {\n               label: \"(GMT+08:00) Kuala Lumpur, Singapore\",\n               value: \"(GMT+08:00) Kuala Lumpur, Singapore\"          \n                 },\n                  {\n               label: \"(GMT+08:00) Irkutsk, Ulaan Bataar\",\n               value: \"(GMT+08:00) Irkutsk, Ulaan Bataar\"          \n                 },\n                {\n               label: \"(GMT+08:00) Perth\",\n               value: \"(GMT+08:00) Perth\"          \n                 },\n                 {\n               label: \"(GMT+08:00) Taipei\",\n               value: \"(GMT+08:00) Taipei\"          \n                 },\n                 {\n               label: \"(GMT+09:00) Osaka, Sapporo, Tokyo\",\n               value: \"(GMT+09:00) Osaka, Sapporo, Tokyo\"          \n                 },\n                 {\n               label: \"(GMT+09:00) Seoul\",\n               value: \"(GMT+09:00) Seoul\"          \n                 },\n                 {\n               label: \"(GMT+09:00) Yakutsk\",\n               value: \"(GMT+09:00) Yakutsk\"          \n                 },\n                 {\n               label: \"(GMT+09:30) Adelaide\",\n               value: \"(GMT+09:30) Adelaide\"          \n                 },\n                 {\n               label: \"(GMT+09:30) Darwin\",\n               value: \"(GMT+09:30) Darwin\"          \n                 },\n\n                 {\n               label: \"(GMT+10:00) Canberra, Melbourne, Sydney\",\n               value: \"(GMT+10:00) Canberra, Melbourne, Sydney\"          \n                 },\n                 {\n               label: \"(GMT+10:00) Hobart\",\n               value: \"(GMT+10:00) Hobart\"          \n                 },\n                 {\n               label: \"(GMT+10:00) Guam, Port Moresby\",\n               value: \"(GMT+10:00) Guam, Port Moresby\"          \n                 },\n                 {\n               label: \"(GMT+10:00) Vladivostok\",\n               value: \"(GMT+10:00) Vladivostok\"          \n                 },\n                 {\n               label: \"(GMT+11:00) Magadan, Solomon Is., New Caledonia\",\n               value: \"(GMT+11:00) Magadan, Solomon Is., New Caledonia\"          \n                 },\n                  {\n               label: \"(GMT+12:00) Auckland, Wellington\",\n               value: \"(GMT+12:00) Auckland, Wellington\"          \n                 },\n                 {\n               label: \"(GMT+12:00) Fiji, Kamchatka, Marshall Is.\",\n               value: \"(GMT+12:00) Fiji, Kamchatka, Marshall Is.\"          \n                 },\n                 {\n               label: \"(GMT+13:00) Nuku'alofa\",\n               value: \"(GMT+13:00) Nuku'alofa\"          \n                 },\n\n         \n         \n         ]\n      }\n   },\n\n    dateFieldName: {\n    type: Date,\n    optional: true,\n    autoform: {\n      type:\"pickadate\"\n    }\n  }, \n\n  createdAt: {\n    type: Date,\n    autoValue: function () {\n      return new Date();\n    }\n  }\n}));\n\nRsvps.allow({\n  insert: function (userId, doc) {\n    return true;\n  },\n  update: function (userId, doc, fields, modifier) {\n    return true;\n  },\n  remove: function (userId, doc) {\n    return true;\n  }\n});"," /*****************************************************************************/\n/* Server Only Methods */\n/*****************************************************************************/\nMeteor.methods({\n\t'submitRsvp': function (rsvp) {\n\t\tconsole.log('new RSVP:', rsvp);\n\t\tRsvps.insert(rsvp);\n\t}\n});\n/**\n * Meteor.publish('items', function (param1, param2) {\n *  this.ready();\n * });\n */\nMeteor.publish('rsvps', function () {\n  return Rsvps.find();\n});"]}}]
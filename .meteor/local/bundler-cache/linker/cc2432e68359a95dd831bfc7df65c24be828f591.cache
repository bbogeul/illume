[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar _ = Package.underscore._;\nvar $ = Package.jquery.$;\nvar jQuery = Package.jquery.jQuery;\nvar IronRouterHelper = Package['ostrio:iron-router-helper-class'].IronRouterHelper;\n\n/* Package-scope variables */\nvar __coffeescriptShare;\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// packages/ostrio_iron-router-meta/iron-router-meta.coffee.js                                                //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar IronRouterMeta,                                                                                           // 1\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;                                                                                //\n                                                                                                              //\nIronRouterMeta = (function(superClass) {                                                                      // 1\n  extend(IronRouterMeta, superClass);                                                                         // 2\n                                                                                                              //\n  function IronRouterMeta(router) {                                                                           // 2\n    this.router = router;                                                                                     // 3\n    IronRouterMeta.__super__.constructor.call(this, this.router);                                             // 3\n    this.router.onAfterAction((function(_this) {                                                              // 3\n      return function() {                                                                                     //\n        var ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7;                                                    // 5\n        $('[data-link-name], [data-meta-name]').remove();                                                     // 5\n        if (((ref = _this.router) != null ? ref.options : void 0) && _.has(_this.router.options, 'meta')) {   // 7\n          _this.addTag(_this.router.options.meta);                                                            // 7\n        }                                                                                                     //\n        if (((ref1 = _this.currentController) != null ? ref1.prototype : void 0) && _.has(_this.currentController.prototype, 'meta')) {\n          _this.addTag(_this.currentController.prototype['meta']);                                            // 8\n        }                                                                                                     //\n        if (((ref2 = _this.currentRoute) != null ? (ref3 = ref2.route) != null ? ref3.options : void 0 : void 0) && _.has(_this.currentRoute.route.options, 'meta')) {\n          _this.addTag(_this.currentRoute.route.options.meta);                                                // 9\n        }                                                                                                     //\n        if (((ref4 = _this.router) != null ? ref4.options : void 0) && _.has(_this.router.options, 'link')) {\n          _this.addLink(_this.router.options.link);                                                           // 11\n        }                                                                                                     //\n        if (((ref5 = _this.currentController) != null ? ref5.prototype : void 0) && _.has(_this.currentController.prototype, 'link')) {\n          _this.addLink(_this.currentController.prototype['link']);                                           // 12\n        }                                                                                                     //\n        if (((ref6 = _this.currentRoute) != null ? (ref7 = ref6.route) != null ? ref7.options : void 0 : void 0) && _.has(_this.currentRoute.route.options, 'link')) {\n          return _this.addLink(_this.currentRoute.route.options.link);                                        //\n        }                                                                                                     //\n      };                                                                                                      //\n    })(this));                                                                                                //\n  }                                                                                                           //\n                                                                                                              //\n  IronRouterMeta.prototype.updateNode = function(type, name, values) {                                        // 2\n    var attrName, content, element;                                                                           // 16\n    if ($('head').has(type + '[data-' + type + '-name=\"' + name + '\"]')[0]) {                                 // 16\n      $(type + '[data-' + type + '-name=\"' + name + '\"]').remove();                                           // 17\n    }                                                                                                         //\n    element = $('<' + type + ' data-' + type + '-name=\"' + name + '\">');                                      // 16\n    for (attrName in values) {                                                                                // 20\n      content = values[attrName];                                                                             //\n      if (_.isFunction(content)) {                                                                            // 21\n        content = content.call(this.currentRoute);                                                            // 21\n      }                                                                                                       //\n      if (content) {                                                                                          // 22\n        element.attr(attrName, content);                                                                      // 22\n      }                                                                                                       //\n    }                                                                                                         // 20\n    return $('head').prepend(element);                                                                        //\n  };                                                                                                          //\n                                                                                                              //\n  IronRouterMeta.prototype.addTag = function(settings) {                                                      // 2\n    var name, results, values;                                                                                // 26\n    if (_.isFunction(settings)) {                                                                             // 26\n      settings = settings.call(this.currentRoute);                                                            // 26\n    }                                                                                                         //\n    results = [];                                                                                             // 27\n    for (name in settings) {                                                                                  //\n      values = settings[name];                                                                                //\n      if (_.isFunction(values)) {                                                                             // 28\n        values = values.call(this.currentRoute);                                                              // 28\n      }                                                                                                       //\n      if (_.isString(values)) {                                                                               // 29\n        values = {                                                                                            // 29\n          content: values,                                                                                    // 29\n          name: name                                                                                          // 29\n        };                                                                                                    //\n      }                                                                                                       //\n      results.push(this.updateNode('meta', name, values));                                                    // 28\n    }                                                                                                         // 27\n    return results;                                                                                           //\n  };                                                                                                          //\n                                                                                                              //\n  IronRouterMeta.prototype.addLink = function(settings) {                                                     // 2\n    var name, results, values;                                                                                // 33\n    if (_.isFunction(settings)) {                                                                             // 33\n      settings = settings.call(this.currentRoute);                                                            // 33\n    }                                                                                                         //\n    results = [];                                                                                             // 34\n    for (name in settings) {                                                                                  //\n      values = settings[name];                                                                                //\n      if (_.isFunction(values)) {                                                                             // 35\n        values = values.call(this.currentRoute);                                                              // 35\n      }                                                                                                       //\n      if (_.isString(values)) {                                                                               // 36\n        values = {                                                                                            // 36\n          href: values,                                                                                       // 36\n          rel: name                                                                                           // 36\n        };                                                                                                    //\n      }                                                                                                       //\n      results.push(this.updateNode('link', name, values));                                                    // 35\n    }                                                                                                         // 34\n    return results;                                                                                           //\n  };                                                                                                          //\n                                                                                                              //\n  return IronRouterMeta;                                                                                      //\n                                                                                                              //\n})(IronRouterHelper);                                                                                         //\n                                                                                                              //\nMeteor.startup(function() {                                                                                   // 1\n  return new IronRouterMeta(Router);                                                                          //\n});                                                                                                           // 39\n                                                                                                              //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['ostrio:iron-router-meta'] = {};\n\n})();\n","servePath":"/packages/ostrio_iron-router-meta.js","sourceMap":{"version":3,"sources":["/packages/ostrio_iron-router-meta/iron-router-meta.coffee"],"names":[],"mappings":"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","file":"/packages/ostrio_iron-router-meta.js","sourcesContent":["class IronRouterMeta extends IronRouterHelper\n  constructor: (@router) -> \n    super @router\n    @router.onAfterAction =>\n      $('[data-link-name], [data-meta-name]').remove()\n\n      @addTag @router.options.meta if @router?.options and _.has @router.options, 'meta'\n      @addTag @currentController::['meta'] if @currentController?.prototype and _.has @currentController::, 'meta'\n      @addTag @currentRoute.route.options.meta if @currentRoute?.route?.options and _.has @currentRoute.route.options, 'meta'\n\n      @addLink @router.options.link if @router?.options and _.has @router.options, 'link'\n      @addLink @currentController::['link'] if @currentController?.prototype and  _.has @currentController::, 'link'\n      @addLink @currentRoute.route.options.link if @currentRoute?.route?.options and  _.has @currentRoute.route.options, 'link'\n\n  updateNode: (type, name, values) ->\n    if $('head').has(type + '[data-' + type + '-name=\"' + name + '\"]')[0]\n      $(type + '[data-' + type + '-name=\"' + name + '\"]').remove() \n\n    element = $ '<' + type + ' data-' + type + '-name=\"' + name + '\">'\n    for attrName, content of values\n      content = content.call @currentRoute if _.isFunction content\n      element.attr attrName, content if content\n    $('head').prepend element\n\n  addTag: (settings) ->\n    settings = settings.call @currentRoute if _.isFunction settings\n    for name, values of settings\n      values = values.call @currentRoute if _.isFunction values\n      values = {content: values, name: name} if _.isString values\n      @updateNode 'meta', name, values\n\n  addLink: (settings) ->\n    settings = settings.call @currentRoute if _.isFunction settings\n    for name, values of settings\n      values = values.call @currentRoute if _.isFunction values\n      values = {href: values, rel: name} if _.isString values\n      @updateNode 'link', name, values\n\nMeteor.startup -> new IronRouterMeta Router"]}}]
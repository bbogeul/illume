{"source":"__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar IronRouterMeta,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nIronRouterMeta = (function(superClass) {\n  extend(IronRouterMeta, superClass);\n\n  function IronRouterMeta(router) {\n    this.router = router;\n    IronRouterMeta.__super__.constructor.call(this, this.router);\n    this.router.onAfterAction((function(_this) {\n      return function() {\n        var ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7;\n        $('[data-link-name], [data-meta-name]').remove();\n        if (((ref = _this.router) != null ? ref.options : void 0) && _.has(_this.router.options, 'meta')) {\n          _this.addTag(_this.router.options.meta);\n        }\n        if (((ref1 = _this.currentController) != null ? ref1.prototype : void 0) && _.has(_this.currentController.prototype, 'meta')) {\n          _this.addTag(_this.currentController.prototype['meta']);\n        }\n        if (((ref2 = _this.currentRoute) != null ? (ref3 = ref2.route) != null ? ref3.options : void 0 : void 0) && _.has(_this.currentRoute.route.options, 'meta')) {\n          _this.addTag(_this.currentRoute.route.options.meta);\n        }\n        if (((ref4 = _this.router) != null ? ref4.options : void 0) && _.has(_this.router.options, 'link')) {\n          _this.addLink(_this.router.options.link);\n        }\n        if (((ref5 = _this.currentController) != null ? ref5.prototype : void 0) && _.has(_this.currentController.prototype, 'link')) {\n          _this.addLink(_this.currentController.prototype['link']);\n        }\n        if (((ref6 = _this.currentRoute) != null ? (ref7 = ref6.route) != null ? ref7.options : void 0 : void 0) && _.has(_this.currentRoute.route.options, 'link')) {\n          return _this.addLink(_this.currentRoute.route.options.link);\n        }\n      };\n    })(this));\n  }\n\n  IronRouterMeta.prototype.updateNode = function(type, name, values) {\n    var attrName, content, element;\n    if ($('head').has(type + '[data-' + type + '-name=\"' + name + '\"]')[0]) {\n      $(type + '[data-' + type + '-name=\"' + name + '\"]').remove();\n    }\n    element = $('<' + type + ' data-' + type + '-name=\"' + name + '\">');\n    for (attrName in values) {\n      content = values[attrName];\n      if (_.isFunction(content)) {\n        content = content.call(this.currentRoute);\n      }\n      if (content) {\n        element.attr(attrName, content);\n      }\n    }\n    return $('head').prepend(element);\n  };\n\n  IronRouterMeta.prototype.addTag = function(settings) {\n    var name, results, values;\n    if (_.isFunction(settings)) {\n      settings = settings.call(this.currentRoute);\n    }\n    results = [];\n    for (name in settings) {\n      values = settings[name];\n      if (_.isFunction(values)) {\n        values = values.call(this.currentRoute);\n      }\n      if (_.isString(values)) {\n        values = {\n          content: values,\n          name: name\n        };\n      }\n      results.push(this.updateNode('meta', name, values));\n    }\n    return results;\n  };\n\n  IronRouterMeta.prototype.addLink = function(settings) {\n    var name, results, values;\n    if (_.isFunction(settings)) {\n      settings = settings.call(this.currentRoute);\n    }\n    results = [];\n    for (name in settings) {\n      values = settings[name];\n      if (_.isFunction(values)) {\n        values = values.call(this.currentRoute);\n      }\n      if (_.isString(values)) {\n        values = {\n          href: values,\n          rel: name\n        };\n      }\n      results.push(this.updateNode('link', name, values));\n    }\n    return results;\n  };\n\n  return IronRouterMeta;\n\n})(IronRouterHelper);\n\nMeteor.startup(function() {\n  return new IronRouterMeta(Router);\n});\n","sourceMap":{"version":3,"file":"/iron-router-meta.coffee.js","sourceRoot":"","sources":["/packages/ostrio_iron-router-meta/iron-router-meta.coffee"],"names":[],"mappings":"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","sourcesContent":["class IronRouterMeta extends IronRouterHelper\n  constructor: (@router) -> \n    super @router\n    @router.onAfterAction =>\n      $('[data-link-name], [data-meta-name]').remove()\n\n      @addTag @router.options.meta if @router?.options and _.has @router.options, 'meta'\n      @addTag @currentController::['meta'] if @currentController?.prototype and _.has @currentController::, 'meta'\n      @addTag @currentRoute.route.options.meta if @currentRoute?.route?.options and _.has @currentRoute.route.options, 'meta'\n\n      @addLink @router.options.link if @router?.options and _.has @router.options, 'link'\n      @addLink @currentController::['link'] if @currentController?.prototype and  _.has @currentController::, 'link'\n      @addLink @currentRoute.route.options.link if @currentRoute?.route?.options and  _.has @currentRoute.route.options, 'link'\n\n  updateNode: (type, name, values) ->\n    if $('head').has(type + '[data-' + type + '-name=\"' + name + '\"]')[0]\n      $(type + '[data-' + type + '-name=\"' + name + '\"]').remove() \n\n    element = $ '<' + type + ' data-' + type + '-name=\"' + name + '\">'\n    for attrName, content of values\n      content = content.call @currentRoute if _.isFunction content\n      element.attr attrName, content if content\n    $('head').prepend element\n\n  addTag: (settings) ->\n    settings = settings.call @currentRoute if _.isFunction settings\n    for name, values of settings\n      values = values.call @currentRoute if _.isFunction values\n      values = {content: values, name: name} if _.isString values\n      @updateNode 'meta', name, values\n\n  addLink: (settings) ->\n    settings = settings.call @currentRoute if _.isFunction settings\n    for name, values of settings\n      values = values.call @currentRoute if _.isFunction values\n      values = {href: values, rel: name} if _.isString values\n      @updateNode 'link', name, values\n\nMeteor.startup -> new IronRouterMeta Router"]}}
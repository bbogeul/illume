{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/collections/schemas.js","filenameRelative":"/collections/schemas.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/collections/schemas.js.map","sourceFileName":"/collections/schemas.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"schemas"},"ignored":false,"code":"\n\nRsvps = new Mongo.Collection(\"rsvps\");\n\nRsvps.attachSchema(new SimpleSchema({\n  name: {\n    type: String,\n    label: \"First Name *\",\n\n    min: 5,\n    max: 80\n  },\n  title: {\n    type: String,\n    label: \"Last Name *\",\n\n    min: 5,\n    max: 80\n  },\n  email: {\n    type: String,\n    regEx: SimpleSchema.RegEx.Email,\n    label: \"Email *\"\n\n  },\n  phone: {\n    type: Number,\n    optional: false,\n    label: \"Phone Number *\"\n\n  },\n  organization: {\n    type: String,\n    optional: false,\n    label: \"Organization *\"\n\n  },\n\n  naics: {\n    type: String,\n    label: \"NAICS code\",\n    optional: true\n  },\n  other: {\n    type: String,\n    optional: true,\n    autoform: {\n      afFieldInput: {\n        type: \"text\"\n      }\n    }\n  },\n  interested: {\n    type: String,\n    optional: false,\n\n    autoform: {\n\n      options: [{\n        label: \"2016 CDP disclosure\",\n        value: \"2016 CDP disclosure\"\n      }, {\n        label: \"GHG accounting\",\n        value: \"GHG accounting\"\n      }, {\n        label: \"Other  - please explain\",\n        value: \"Other\"\n      }]\n    }\n  },\n  timezone: {\n    type: String,\n\n    optional: true,\n\n    autoform: {\n\n      options: [{\n        label: \"(GMT-08:00) Pacific Time (US & Canada)\",\n        value: \"Pacific Time (US & Canada)\"\n      }, {\n        label: \"(GMT-11:00) International Date Line West\",\n        value: \"International Date Line West\"\n      }, {\n        label: \"(GMT-10:00) Midway Island, Samoa\",\n        value: \"Midway Island, Samoa\"\n      }, {\n        label: \"(GMT-10:00) Hawaii\",\n        value: \"Hawaii\"\n      }, {\n        label: \"(GMT-09:00) Alaska\",\n        value: \"(GMT-09:00) Alaska\"\n      }, {\n        label: \"(GMT-07:00) Arizona\",\n        value: \"(GMT-07:00) Arizona\"\n      }, {\n        label: \"(GMT-07:00) Mountain Time (US & Canada)\",\n        value: \"(GMT-07:00) Mountain Time (US & Canada)\"\n      }, {\n        label: \"(GMT-06:00) Central America\",\n        value: \"(GMT-06:00) Central America\"\n      }, {\n        label: \"(GMT-06:00) Central Time (US & Canada)\",\n        value: \"(GMT-06:00) Central Time (US & Canada)\"\n      }, {\n        label: \"(GMT-06:00) Guadalajara, Mexico City, Monterrey\",\n        value: \"(GMT-06:00) Guadalajara, Mexico City, Monterrey\"\n      }, {\n        label: \"(GMT-05:00) Bogota, Lima, Quito, Rio Branco\",\n        value: \"(GMT-05:00) Bogota, Lima, Quito, Rio Branco\"\n      }, {\n        label: \"(GMT-05:00) Eastern Time (US & Canada)\",\n        value: \"(GMT-05:00) Eastern Time (US & Canada)\"\n      }, {\n        label: \"(GMT-05:00) Indiana (East)\",\n        value: \"(GMT-05:00) Indiana (East)\"\n      }, {\n        label: \"(GMT-04:00) Atlantic Time (Canada)\",\n        value: \"(GMT-04:00) Atlantic Time (Canada)\"\n      }, {\n        label: \"(GMT-04:00) Caracas, La Paz\",\n        value: \"Caracas, La Paz\"\n      }, {\n        label: \"(GMT-04:00) Manaus\",\n        value: \"(GMT-04:00) Manaus\"\n      }, {\n        label: \"(GMT-04:00) Santiago\",\n        value: \"(GMT-04:00) Santiago\"\n      }, {\n        label: \"(GMT-03:30) Newfoundland\",\n        value: \"(GMT-03:30) Newfoundland\"\n      }, {\n        label: \"(GMT-03:00) Brasilia\",\n        value: \"(GMT-03:00) Brasilia\"\n      }, {\n        label: \"(GMT-03:00) Buenos Aires, Georgetown\",\n        value: \"(GMT-03:00) Buenos Aires, Georgetown\"\n      }, {\n        label: \"(GMT-03:00) Greenland\",\n        value: \"(GMT-03:00) Greenland\"\n      }, {\n        label: \"(GMT-03:00) Montevideo\",\n        value: \"(GMT-03:00) Montevideo\"\n      }, {\n        label: \"(GMT-02:00) Mid-Atlantic\",\n        value: \"(GMT-02:00) Mid-Atlantic\"\n      }, {\n        label: \"(GMT-01:00) Cape Verde Is\",\n        value: \"(GMT-01:00) Cape Verde Is\"\n      }, {\n        label: \"(GMT-01:00) Azores\",\n        value: \"(GMT-01:00) Azores\"\n      }, {\n        label: \"(GMT+00:00) Casablanca, Monrovia, Reykjavik\",\n        value: \"(GMT+00:00) Casablanca, Monrovia, Reykjavik\"\n      }, {\n        label: \"(GMT+00:00) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London\",\n        value: \"(GMT+00:00) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London\"\n      }, {\n        label: \"(GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n        value: \"(GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\"\n      }, {\n        label: \"(GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n        value: \"(GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\"\n      }, {\n        label: \"(GMT+01:00) Brussels, Copenhagen, Madrid, Paris\",\n        value: \"(GMT+01:00) Brussels, Copenhagen, Madrid, Paris\"\n      }, {\n        label: \"(GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n        value: \"(GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb\"\n      }, {\n        label: \"(GMT+01:00) West Central Africa\",\n        value: \"(GMT+01:00) West Central Africa\"\n      }, {\n        label: \"(GMT+02:00) Amman\",\n        value: \"(GMT+02:00) Amman\"\n      }, {\n        label: \"(GMT+02:00) Athens, Bucharest, Istanbul\",\n        value: \"(GMT+02:00) Athens, Bucharest, Istanbul\"\n      }, {\n        label: \"(GMT+02:00) Beirut\",\n        value: \"(GMT+02:00) Beirut\"\n      }, {\n        label: \"(GMT+02:00) Cairo\",\n        value: \"(GMT+02:00) Cairo\"\n      }, {\n        label: \"(GMT+02:00) Harare, Pretoria\",\n        value: \"(GMT+02:00) Harare, Pretoria\"\n      }, {\n        label: \"(GMT+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n        value: \"(GMT+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\"\n      }, {\n        label: \"(GMT+02:00) Jerusalem\",\n        value: \"(GMT+02:00) Jerusalem\"\n      }, {\n        label: \"(GMT+02:00) Minsk\",\n        value: \"(GMT+02:00) Minsk\"\n      }, {\n        label: \"(GMT+02:00) Windhoek\",\n        value: \"(GMT+02:00) Windhoek\"\n      }, {\n        label: \"(GMT+03:00) Kuwait, Riyadh, Baghdad\",\n        value: \"(GMT+03:00) Kuwait, Riyadh, Baghdad\"\n      }, {\n        label: \"(GMT+03:00) Moscow, St. Petersburg, Volgograd\",\n        value: \"(GMT+03:00) Moscow, St. Petersburg, Volgograd\"\n      }, {\n        label: \"(GMT+03:00) Nairobi\",\n        value: \"(GMT+03:00) Nairobi\"\n      }, {\n        label: \"(GMT+03:00) Tbilisi\",\n        value: \"(GMT+03:00) Tbilisi\"\n      }, {\n        label: \"(GMT+03:30) Tehran\",\n        value: \"(GMT+03:30) Tehran\"\n      }, {\n        label: \"(GMT+04:00) Abu Dhabi, Muscat\",\n        value: \"(GMT+04:00) Abu Dhabi, Muscat\"\n      }, {\n        label: \"(GMT+04:00) Baku\",\n        value: \"(GMT+04:00) Baku\"\n      }, {\n        label: \"(GMT+04:00) Yerevan\",\n        value: \"(GMT+04:00) Yerevan\"\n      }, {\n        label: \"(GMT+04:30) Kabul\",\n        value: \"(GMT+04:30) Kabul\"\n      }, {\n        label: \"(GMT+05:00) Yekaterinburg\",\n        value: \"(GMT+05:00) Yekaterinburg\"\n      }, {\n        label: \"(GMT+05:00) Islamabad, Karachi, Tashkent\",\n        value: \"(GMT+05:00) Islamabad, Karachi, Tashkent\"\n      }, {\n        label: \"(GMT+05:30) Sri Jayawardenapura\",\n        value: \"(GMT+05:30) Sri Jayawardenapura\"\n      }, {\n        label: \"(GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n        value: \"(GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi\"\n      }, {\n        label: \"(GMT+05:45) Kathmandu\",\n        value: \"(GMT+05:45) Kathmandu\"\n      }, {\n        label: \"(GMT+06:00) Almaty, Novosibirsk\",\n        value: \"(GMT+06:00) Almaty, Novosibirsk\"\n      }, {\n        label: \"(GMT+06:00) Astana, Dhaka\",\n        value: \"(GMT+06:00) Astana, Dhaka\"\n      }, {\n        label: \"(GMT+06:30) Yangon (Rangoon)\",\n        value: \"(GMT+06:30) Yangon (Rangoon)\"\n      }, {\n        label: \"(GMT+07:00) Bangkok, Hanoi, Jakarta\",\n        value: \"(GMT+07:00) Bangkok, Hanoi, Jakarta\"\n      }, {\n        label: \"(GMT+07:00) Krasnoyarsk\",\n        value: \"(GMT+07:00) Krasnoyarsk\"\n      }, {\n        label: \"(GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n        value: \"(GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi\"\n      }, {\n        label: \"(GMT+08:00) Kuala Lumpur, Singapore\",\n        value: \"(GMT+08:00) Kuala Lumpur, Singapore\"\n      }, {\n        label: \"(GMT+08:00) Irkutsk, Ulaan Bataar\",\n        value: \"(GMT+08:00) Irkutsk, Ulaan Bataar\"\n      }, {\n        label: \"(GMT+08:00) Perth\",\n        value: \"(GMT+08:00) Perth\"\n      }, {\n        label: \"(GMT+08:00) Taipei\",\n        value: \"(GMT+08:00) Taipei\"\n      }, {\n        label: \"(GMT+09:00) Osaka, Sapporo, Tokyo\",\n        value: \"(GMT+09:00) Osaka, Sapporo, Tokyo\"\n      }, {\n        label: \"(GMT+09:00) Seoul\",\n        value: \"(GMT+09:00) Seoul\"\n      }, {\n        label: \"(GMT+09:00) Yakutsk\",\n        value: \"(GMT+09:00) Yakutsk\"\n      }, {\n        label: \"(GMT+09:30) Adelaide\",\n        value: \"(GMT+09:30) Adelaide\"\n      }, {\n        label: \"(GMT+09:30) Darwin\",\n        value: \"(GMT+09:30) Darwin\"\n      }, {\n        label: \"(GMT+10:00) Canberra, Melbourne, Sydney\",\n        value: \"(GMT+10:00) Canberra, Melbourne, Sydney\"\n      }, {\n        label: \"(GMT+10:00) Hobart\",\n        value: \"(GMT+10:00) Hobart\"\n      }, {\n        label: \"(GMT+10:00) Guam, Port Moresby\",\n        value: \"(GMT+10:00) Guam, Port Moresby\"\n      }, {\n        label: \"(GMT+10:00) Vladivostok\",\n        value: \"(GMT+10:00) Vladivostok\"\n      }, {\n        label: \"(GMT+11:00) Magadan, Solomon Is., New Caledonia\",\n        value: \"(GMT+11:00) Magadan, Solomon Is., New Caledonia\"\n      }, {\n        label: \"(GMT+12:00) Auckland, Wellington\",\n        value: \"(GMT+12:00) Auckland, Wellington\"\n      }, {\n        label: \"(GMT+12:00) Fiji, Kamchatka, Marshall Is.\",\n        value: \"(GMT+12:00) Fiji, Kamchatka, Marshall Is.\"\n      }, {\n        label: \"(GMT+13:00) Nuku'alofa\",\n        value: \"(GMT+13:00) Nuku'alofa\"\n      }]\n    }\n  },\n\n  dateFieldName: {\n    type: Date,\n    optional: true,\n    autoform: {\n      type: \"pickadate\"\n    }\n  },\n\n  createdAt: {\n    type: Date,\n    autoValue: function () {\n      function autoValue() {\n        return new Date();\n      }\n\n      return autoValue;\n    }()\n  }\n}));\n\nRsvps.allow({\n  insert: function () {\n    function insert(userId, doc) {\n      return true;\n    }\n\n    return insert;\n  }(),\n  update: function () {\n    function update(userId, doc, fields, modifier) {\n      return true;\n    }\n\n    return update;\n  }(),\n  remove: function () {\n    function remove(userId, doc) {\n      return true;\n    }\n\n    return remove;\n  }()\n});","ast":null,"map":{"version":3,"sources":["/collections/schemas.js"],"names":[],"mappings":"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","file":"/collections/schemas.js.map","sourcesContent":[" \n\nRsvps = new Mongo.Collection(\"rsvps\");\n\nRsvps.attachSchema(new SimpleSchema({\n  name: {\n    type: String,\n    label: \"First Name *\",\n     \n    min: 5,\n    max: 80    \n  },\n  title: {\n    type: String,\n    label: \"Last Name *\",\n    \n    min: 5,\n    max: 80    \n  },\n  email: {\n      type: String,\n      regEx: SimpleSchema.RegEx.Email,\n      label: \"Email *\"\n       \n  },\n  phone: {\n      type: Number,\n      optional: false,\n      label: \"Phone Number *\"\n       \n  },\n  organization: {\n      type: String,\n      optional: false,\n      label: \"Organization *\"\n       \n  },\n \n    naics: {\n      type: String,\n      label: \"NAICS code\",\n      optional: true\n  },\n      other: {\n    type: String,\n    optional: true,\n    autoform: {\n      afFieldInput: {\n        type: \"text\"\n      }\n    }\n  },\n    interested: {\n      type: String,\n      optional: false,\n     \n      autoform: {\n\n        options: [\n            {\n               label: \"2016 CDP disclosure\",\n               value: \"2016 CDP disclosure\"\n            },\n            {\n               label: \"GHG accounting\",\n               value: \"GHG accounting\"\n            },\n            {\n               label: \"Other  - please explain\",\n               value: \"Other\"\n            }\n         ]\n      }\n   },\n  timezone: {\n      type: String,\n      \n      optional: true,\n     \n      autoform: {\n\n        options: [\n            {\n               label: \"(GMT-08:00) Pacific Time (US & Canada)\",\n               value: \"Pacific Time (US & Canada)\"\n            },\n            {\n               label: \"(GMT-11:00) International Date Line West\",\n               value: \"International Date Line West\"\n            },\n            {\n               label: \"(GMT-10:00) Midway Island, Samoa\",\n               value: \"Midway Island, Samoa\"\n            },\n             {\n               label: \"(GMT-10:00) Hawaii\",\n               value: \"Hawaii\"\n            },\n            {\n               label: \"(GMT-09:00) Alaska\",\n               value: \"(GMT-09:00) Alaska\"\n            },\n            {\n               label: \"(GMT-07:00) Arizona\",\n               value: \"(GMT-07:00) Arizona\"\n            },\n            {\n               label: \"(GMT-07:00) Mountain Time (US & Canada)\",\n               value: \"(GMT-07:00) Mountain Time (US & Canada)\"\n            },\n            {\n               label: \"(GMT-06:00) Central America\",\n               value: \"(GMT-06:00) Central America\"\n            },\n            {\n               label: \"(GMT-06:00) Central Time (US & Canada)\",\n               value: \"(GMT-06:00) Central Time (US & Canada)\"\n            },\n            {\n               label: \"(GMT-06:00) Guadalajara, Mexico City, Monterrey\",\n               value: \"(GMT-06:00) Guadalajara, Mexico City, Monterrey\"\n            },\n            {\n               label: \"(GMT-05:00) Bogota, Lima, Quito, Rio Branco\",\n               value: \"(GMT-05:00) Bogota, Lima, Quito, Rio Branco\"\n            },\n            {\n               label: \"(GMT-05:00) Eastern Time (US & Canada)\",\n               value: \"(GMT-05:00) Eastern Time (US & Canada)\" \n            },\n            {\n               label: \"(GMT-05:00) Indiana (East)\",\n               value: \"(GMT-05:00) Indiana (East)\"\n            },\n             {\n               label: \"(GMT-04:00) Atlantic Time (Canada)\",\n               value: \"(GMT-04:00) Atlantic Time (Canada)\"\n            },\n             {\n               label: \"(GMT-04:00) Caracas, La Paz\",\n               value: \"Caracas, La Paz\"\n            },\n             {\n               label: \"(GMT-04:00) Manaus\",\n               value: \"(GMT-04:00) Manaus\"\n            },\n             {\n               label: \"(GMT-04:00) Santiago\",\n               value: \"(GMT-04:00) Santiago\"\n            },\n             {\n               label: \"(GMT-03:30) Newfoundland\",\n               value: \"(GMT-03:30) Newfoundland\"\n            },\n             {\n               label: \"(GMT-03:00) Brasilia\",\n               value: \"(GMT-03:00) Brasilia\"\n            },\n             {\n               label: \"(GMT-03:00) Buenos Aires, Georgetown\",\n               value: \"(GMT-03:00) Buenos Aires, Georgetown\"\n            },\n             {\n               label: \"(GMT-03:00) Greenland\",\n               value: \"(GMT-03:00) Greenland\"\n            },\n             {\n               label: \"(GMT-03:00) Montevideo\",\n               value: \"(GMT-03:00) Montevideo\"\n            },\n            {\n               label: \"(GMT-02:00) Mid-Atlantic\",\n               value: \"(GMT-02:00) Mid-Atlantic\"\n            },\n             {\n               label: \"(GMT-01:00) Cape Verde Is\",\n               value: \"(GMT-01:00) Cape Verde Is\"\n            },\n              {\n               label: \"(GMT-01:00) Azores\",\n               value: \"(GMT-01:00) Azores\"\n            },\n            {\n               label: \"(GMT+00:00) Casablanca, Monrovia, Reykjavik\",\n               value: \"(GMT+00:00) Casablanca, Monrovia, Reykjavik\"\n            },\n            {\n               label: \"(GMT+00:00) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London\",\n               value: \"(GMT+00:00) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London\"\n            },\n                    {\n               label: \"(GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n               value: \"(GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\"          \n                 },\n                 {\n               label: \"(GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n               value: \"(GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\"          \n                 },\n                   {\n               label: \"(GMT+01:00) Brussels, Copenhagen, Madrid, Paris\",\n               value: \"(GMT+01:00) Brussels, Copenhagen, Madrid, Paris\"          \n                 },\n                  {\n               label: \"(GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n               value: \"(GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb\"          \n                 },\n                    {\n               label: \"(GMT+01:00) West Central Africa\",\n               value: \"(GMT+01:00) West Central Africa\"          \n                 },\n                  {\n               label: \"(GMT+02:00) Amman\",\n               value: \"(GMT+02:00) Amman\"          \n                 },\n                     {\n               label: \"(GMT+02:00) Athens, Bucharest, Istanbul\",\n               value: \"(GMT+02:00) Athens, Bucharest, Istanbul\"          \n                 },\n               \n                 {\n               label: \"(GMT+02:00) Beirut\",\n               value: \"(GMT+02:00) Beirut\"          \n                 },\n                 {\n               label: \"(GMT+02:00) Cairo\",\n               value: \"(GMT+02:00) Cairo\"          \n                 },\n                  {\n               label: \"(GMT+02:00) Harare, Pretoria\",\n               value: \"(GMT+02:00) Harare, Pretoria\"          \n                 },\n                  {\n               label: \"(GMT+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n               value: \"(GMT+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\"          \n                 },\n                  {\n               label: \"(GMT+02:00) Jerusalem\",\n               value: \"(GMT+02:00) Jerusalem\"          \n                 },\n                  {\n               label: \"(GMT+02:00) Minsk\",\n               value: \"(GMT+02:00) Minsk\"          \n                 },\n                 {\n               label: \"(GMT+02:00) Windhoek\",\n               value: \"(GMT+02:00) Windhoek\"          \n                 },\n                 {\n               label: \"(GMT+03:00) Kuwait, Riyadh, Baghdad\",\n               value: \"(GMT+03:00) Kuwait, Riyadh, Baghdad\"          \n                 },\n                 {\n               label: \"(GMT+03:00) Moscow, St. Petersburg, Volgograd\",\n               value: \"(GMT+03:00) Moscow, St. Petersburg, Volgograd\"          \n                 },\n                 {\n               label: \"(GMT+03:00) Nairobi\",\n               value: \"(GMT+03:00) Nairobi\"          \n                 },\n                 {\n               label: \"(GMT+03:00) Tbilisi\",\n               value: \"(GMT+03:00) Tbilisi\"          \n                 },\n                 {\n               label: \"(GMT+03:30) Tehran\",\n               value: \"(GMT+03:30) Tehran\"          \n                 },\n                 {\n               label: \"(GMT+04:00) Abu Dhabi, Muscat\",\n               value: \"(GMT+04:00) Abu Dhabi, Muscat\"          \n                 },\n                 {\n               label: \"(GMT+04:00) Baku\",\n               value: \"(GMT+04:00) Baku\"          \n                 },\n                 {\n               label: \"(GMT+04:00) Yerevan\",\n               value: \"(GMT+04:00) Yerevan\"          \n                 },\n                 {\n               label: \"(GMT+04:30) Kabul\",\n               value: \"(GMT+04:30) Kabul\"          \n                 },\n                 {\n               label: \"(GMT+05:00) Yekaterinburg\",\n               value: \"(GMT+05:00) Yekaterinburg\"          \n                 },\n                  {\n               label: \"(GMT+05:00) Islamabad, Karachi, Tashkent\",\n               value: \"(GMT+05:00) Islamabad, Karachi, Tashkent\"          \n                 },\n                 {\n               label: \"(GMT+05:30) Sri Jayawardenapura\",\n               value: \"(GMT+05:30) Sri Jayawardenapura\"          \n                 },\n                  {\n               label: \"(GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n               value: \"(GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi\"          \n                 },\n                 {\n               label: \"(GMT+05:45) Kathmandu\",\n               value: \"(GMT+05:45) Kathmandu\"          \n                 },\n                 {\n               label: \"(GMT+06:00) Almaty, Novosibirsk\",\n               value: \"(GMT+06:00) Almaty, Novosibirsk\"          \n                 },\n                  {\n               label: \"(GMT+06:00) Astana, Dhaka\",\n               value: \"(GMT+06:00) Astana, Dhaka\"          \n                 },\n                 {\n               label: \"(GMT+06:30) Yangon (Rangoon)\",\n               value: \"(GMT+06:30) Yangon (Rangoon)\"          \n                 },\n                  {\n               label: \"(GMT+07:00) Bangkok, Hanoi, Jakarta\",\n               value: \"(GMT+07:00) Bangkok, Hanoi, Jakarta\"          \n                 },\n                 {\n               label: \"(GMT+07:00) Krasnoyarsk\",\n               value: \"(GMT+07:00) Krasnoyarsk\"          \n                 },\n                 {\n               label: \"(GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n               value: \"(GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi\"          \n                 },\n                 {\n               label: \"(GMT+08:00) Kuala Lumpur, Singapore\",\n               value: \"(GMT+08:00) Kuala Lumpur, Singapore\"          \n                 },\n                  {\n               label: \"(GMT+08:00) Irkutsk, Ulaan Bataar\",\n               value: \"(GMT+08:00) Irkutsk, Ulaan Bataar\"          \n                 },\n                {\n               label: \"(GMT+08:00) Perth\",\n               value: \"(GMT+08:00) Perth\"          \n                 },\n                 {\n               label: \"(GMT+08:00) Taipei\",\n               value: \"(GMT+08:00) Taipei\"          \n                 },\n                 {\n               label: \"(GMT+09:00) Osaka, Sapporo, Tokyo\",\n               value: \"(GMT+09:00) Osaka, Sapporo, Tokyo\"          \n                 },\n                 {\n               label: \"(GMT+09:00) Seoul\",\n               value: \"(GMT+09:00) Seoul\"          \n                 },\n                 {\n               label: \"(GMT+09:00) Yakutsk\",\n               value: \"(GMT+09:00) Yakutsk\"          \n                 },\n                 {\n               label: \"(GMT+09:30) Adelaide\",\n               value: \"(GMT+09:30) Adelaide\"          \n                 },\n                 {\n               label: \"(GMT+09:30) Darwin\",\n               value: \"(GMT+09:30) Darwin\"          \n                 },\n\n                 {\n               label: \"(GMT+10:00) Canberra, Melbourne, Sydney\",\n               value: \"(GMT+10:00) Canberra, Melbourne, Sydney\"          \n                 },\n                 {\n               label: \"(GMT+10:00) Hobart\",\n               value: \"(GMT+10:00) Hobart\"          \n                 },\n                 {\n               label: \"(GMT+10:00) Guam, Port Moresby\",\n               value: \"(GMT+10:00) Guam, Port Moresby\"          \n                 },\n                 {\n               label: \"(GMT+10:00) Vladivostok\",\n               value: \"(GMT+10:00) Vladivostok\"          \n                 },\n                 {\n               label: \"(GMT+11:00) Magadan, Solomon Is., New Caledonia\",\n               value: \"(GMT+11:00) Magadan, Solomon Is., New Caledonia\"          \n                 },\n                  {\n               label: \"(GMT+12:00) Auckland, Wellington\",\n               value: \"(GMT+12:00) Auckland, Wellington\"          \n                 },\n                 {\n               label: \"(GMT+12:00) Fiji, Kamchatka, Marshall Is.\",\n               value: \"(GMT+12:00) Fiji, Kamchatka, Marshall Is.\"          \n                 },\n                 {\n               label: \"(GMT+13:00) Nuku'alofa\",\n               value: \"(GMT+13:00) Nuku'alofa\"          \n                 },\n\n         \n         \n         ]\n      }\n   },\n\n    dateFieldName: {\n    type: Date,\n    optional: true,\n    autoform: {\n      type:\"pickadate\"\n    }\n  }, \n\n  createdAt: {\n    type: Date,\n    autoValue: function () {\n      return new Date();\n    }\n  }\n}));\n\nRsvps.allow({\n  insert: function (userId, doc) {\n    return true;\n  },\n  update: function (userId, doc, fields, modifier) {\n    return true;\n  },\n  remove: function (userId, doc) {\n    return true;\n  }\n});"]},"hash":"0287958cd64c2fd53d4d130615c0586263350939"}
